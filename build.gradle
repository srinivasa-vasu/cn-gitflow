buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
        javaCfEnvVersion = '2.1.1.RELEASE'
    }

    repositories {
        jcenter()
        // mavenCentral()
        maven {
            // url "https://repo.spring.io/plugins-release" 
            url = System.getenv('LOCAL_REPO')
            name = "maven-main-cache"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

plugins {
  id "org.sonarqube" version "3.0"
  id "com.jfrog.artifactory" version "4.16.1"
}

apply plugin: 'java'

apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

version = '1.0'

repositories {
    add buildscript.repositories.getByName("maven-main-cache")
}

dependencies {
    // Spring Boot
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.apache.commons:commons-dbcp2"

    // Java CfEnv
    implementation "io.pivotal.cfenv:java-cfenv-boot:${javaCfEnvVersion}"

    // JPA Persistence
    runtimeOnly "org.apache.commons:commons-pool2:2.6.0"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "mysql:mysql-connector-java"
    runtimeOnly "org.postgresql:postgresql"
    runtimeOnly "com.microsoft.sqlserver:mssql-jdbc"

    // uncomment to use Lettuce instead of Jedis for Redis connections
    // runtime "io.lettuce:lettuce-core"

    // Webjars
    implementation "org.webjars:bootstrap:3.1.1"
    implementation "org.webjars:angularjs:1.2.16"
    implementation "org.webjars:angular-ui:0.4.0-2"
    implementation "org.webjars:angular-ui-bootstrap:0.10.0-1"
    implementation "org.webjars:jquery:2.1.0-2"

    //implementation "io.micrometer:micrometer-registry-prometheus"
    //implementation "io.micrometer:micrometer-registry-wavefront"

    //implementation "org.springframework.cloud.bazaar.connector:spring-cloud-cloudfoundry-bazaar-connector:Bazaar.RC1"

    // Oracle - uncomment one of the following after placing driver in ./libs
    // compile files('libs/ojdbc8.jar')
    // compile files('libs/ojdbc7.jar')

    // Testing
    testImplementation "junit:junit"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

artifactory {
    contextUrl = System.getenv('LOCAL_REPO')
    publish {
        repository {
            repoKey = 'gradle-dev-local'
            username = System.getenv('REPO_KEY')
            password = System.getenv('REPO_SECRET')
            maven = true
        }
        defaults {
            publications("mavenJava")
        }
    }
    resolve {
        repository {
            repoKey = 'gradle-dev'
            username = System.getenv('REPO_KEY')
            password = System.getenv('REPO_SECRET')
            maven = true
            
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact bootJar
        }
    }
}

jar {
    archiveBaseName = "spring-music"
    archiveVersion = "" // omit the version from the war file name
}
